spring:
  config:
    import: file:.env[.properties]
  profiles:
    active: ${ACTIVE_VAL}

---
# local 설정
spring:
  config:
    activate:
      on-profile: local
  application:
    name: order-management-platform
  datasource:
    url: ${LOCAL_DB_URL}
    username: ${LOCAL_DB_USERNAME}
    password: ${LOCAL_DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      schema: omp

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    generate-ddl: true
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    hibernate:
      ddl-auto: create

  devtools:
    livereload:
      enabled: true
jwt:
  secret:
    key: ${JWT_SECRET_KEY}

---
# test 환경
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_ON_EXIT=FALSE  # db 주소 고정
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    generate-ddl: true
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    hibernate:
      ddl-auto: create-drop
    defer-datasource-initialization: true # hibernate가 초기화되기 전 data.sql 실행하는 것을 방지
  sql:
    init:
      mode: always
      data-locations: classpath:db/data.sql # db 시작할때 실행시킬 script (더미 데이터 생성)